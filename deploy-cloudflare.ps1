# Script de d√©ploiement Cloudflare Workers pour Windows PowerShell
# QR Code Jeunact - Configuration 24/7

Write-Host "üöÄ D√©ploiement QR Code Jeunact sur Cloudflare Workers" -ForegroundColor Blue
Write-Host "==================================================" -ForegroundColor Blue
Write-Host ""

# Fonction pour afficher les messages
function Write-Info {
    param($Message)
    Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor Cyan
}

function Write-Success {
    param($Message)
    Write-Host "‚úÖ $Message" -ForegroundColor Green
}

function Write-Warning {
    param($Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor Yellow
}

function Write-Error {
    param($Message)
    Write-Host "‚ùå $Message" -ForegroundColor Red
}

# V√©rifier les pr√©requis
Write-Info "V√©rification des pr√©requis..."

# V√©rifier Python
try {
    $pythonVersion = python --version 2>&1
    Write-Success "Python install√©: $pythonVersion"
} catch {
    Write-Error "Python n'est pas install√©"
    exit 1
}

# V√©rifier Node.js
try {
    $nodeVersion = node --version 2>&1
    Write-Success "Node.js install√©: $nodeVersion"
} catch {
    Write-Error "Node.js n'est pas install√©"
    exit 1
}

Write-Host ""
Write-Info "üìä √âtape 1: Configuration Supabase"
Write-Host "----------------------------------"

# Demander les informations Supabase
$supabaseUrl = Read-Host "üåê Entrez l'URL de votre projet Supabase (ex: https://xyz.supabase.co)"
$supabaseKey = Read-Host "üîë Entrez votre cl√© API Supabase (anon key)"
$dbPassword = Read-Host "üîê Entrez le mot de passe de votre base de donn√©es Supabase"

if (-not $supabaseUrl -or -not $supabaseKey -or -not $dbPassword) {
    Write-Error "Toutes les informations Supabase sont requises"
    exit 1
}

# Extraire l'ID du projet
$projectId = $supabaseUrl -replace "https://", "" -replace ".supabase.co", ""

# Construire l'URL de connexion PostgreSQL
$databaseUrl = "postgresql://postgres:$dbPassword@db.$projectId.supabase.co:5432/postgres"

Write-Success "URL de connexion g√©n√©r√©e: $databaseUrl"

# Cr√©er le fichier .env.local
$envContent = @"
# Configuration Supabase pour QR Code Jeunact
DATABASE_URL=$databaseUrl
SUPABASE_URL=$supabaseUrl
SUPABASE_ANON_KEY=$supabaseKey
SUPABASE_PROJECT_ID=$projectId
"@

$envContent | Out-File -FilePath ".env.local" -Encoding UTF8
Write-Success "Configuration sauvegard√©e dans .env.local"

Write-Host ""
Write-Info "üîÑ √âtape 2: Migration des donn√©es"
Write-Host "---------------------------------"

# V√©rifier si le fichier SQLite existe
if (Test-Path "instance/jeunact_members.db") {
    Write-Info "Base de donn√©es SQLite trouv√©e, migration en cours..."
    
    # Installer psycopg2 si n√©cessaire
    try {
        pip install psycopg2-binary
        Write-Success "psycopg2-binary install√©"
    } catch {
        Write-Warning "Erreur installation psycopg2-binary"
    }
    
    # Ex√©cuter la migration
    try {
        python migrate-to-supabase.py
        Write-Success "Migration des donn√©es termin√©e"
    } catch {
        Write-Warning "Erreur lors de la migration"
    }
} else {
    Write-Warning "Base de donn√©es SQLite non trouv√©e, cr√©ation des tables vides"
}

Write-Host ""
Write-Info "‚òÅÔ∏è  √âtape 3: Installation Wrangler CLI"
Write-Host "-------------------------------------"

# Installer Wrangler globalement
try {
    npm install -g wrangler
    Write-Success "Wrangler CLI install√©"
} catch {
    Write-Error "Erreur installation Wrangler CLI"
    Write-Info "Essayez d'ex√©cuter: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"
    Write-Info "Puis relancez ce script"
    exit 1
}

Write-Host ""
Write-Info "üîê √âtape 4: Authentification Cloudflare"
Write-Host "--------------------------------------"

# Authentification Cloudflare
try {
    wrangler login
    Write-Success "Authentification Cloudflare r√©ussie"
} catch {
    Write-Error "Erreur authentification Cloudflare"
    exit 1
}

Write-Host ""
Write-Info "üì¶ √âtape 5: Configuration des services Cloudflare"
Write-Host "-----------------------------------------------"

# Cr√©er le bucket R2
try {
    wrangler r2 bucket create jeunact-photos
    Write-Success "Bucket R2 'jeunact-photos' cr√©√©"
} catch {
    Write-Warning "Bucket R2 pourrait d√©j√† exister"
}

# Cr√©er le namespace KV
try {
    $kvOutput = wrangler kv:namespace create "MEMBERS_KV" --preview false
    $kvId = ($kvOutput | Select-String 'id = "([^"]*)"').Matches[0].Groups[1].Value
    Write-Success "Namespace KV cr√©√©: $kvId"
    
    $kvPreviewOutput = wrangler kv:namespace create "MEMBERS_KV" --preview true
    $kvPreviewId = ($kvPreviewOutput | Select-String 'id = "([^"]*)"').Matches[0].Groups[1].Value
    Write-Success "Namespace KV preview cr√©√©: $kvPreviewId"
    
    # Mettre √† jour wrangler.toml
    $wranglerContent = Get-Content "wrangler.toml" -Raw
    $wranglerContent = $wranglerContent -replace "your-kv-namespace-id", $kvId
    $wranglerContent = $wranglerContent -replace "your-preview-kv-namespace-id", $kvPreviewId
    $wranglerContent = $wranglerContent -replace "postgresql://postgres:password@db.project-ref.supabase.co:5432/postgres", $databaseUrl
    
    # G√©n√©rer une cl√© secr√®te
    $secretKey = [System.Convert]::ToBase64String([System.Security.Cryptography.RandomNumberGenerator]::GetBytes(32))
    $wranglerContent = $wranglerContent -replace "your-secret-key-here", $secretKey
    
    $wranglerContent | Out-File -FilePath "wrangler.toml" -Encoding UTF8
    Write-Success "wrangler.toml mis √† jour"
    
} catch {
    Write-Warning "Erreur cr√©ation namespace KV"
}

Write-Host ""
Write-Info "üöÄ √âtape 6: D√©ploiement de l'application"
Write-Host "---------------------------------------"

# D√©ploiement en staging
try {
    Write-Info "D√©ploiement en staging..."
    wrangler deploy --env staging
    Write-Success "D√©ploiement staging r√©ussi"
} catch {
    Write-Warning "Erreur d√©ploiement staging"
}

# D√©ploiement en production
try {
    Write-Info "D√©ploiement en production..."
    wrangler deploy --env production
    Write-Success "D√©ploiement production r√©ussi"
} catch {
    Write-Error "Erreur d√©ploiement production"
    exit 1
}

Write-Host ""
Write-Success "üéâ D√©ploiement termin√© avec succ√®s !"
Write-Host "====================================="
Write-Host ""
Write-Host "üìã R√©sum√©:" -ForegroundColor Green
Write-Host "‚úÖ Supabase configur√© et migr√©" -ForegroundColor Green
Write-Host "‚úÖ Cloudflare Workers d√©ploy√©" -ForegroundColor Green
Write-Host "‚úÖ Application disponible 24/7" -ForegroundColor Green
Write-Host ""
Write-Host "üîó Liens utiles:" -ForegroundColor Cyan
Write-Host "‚Ä¢ Dashboard Cloudflare: https://dash.cloudflare.com" -ForegroundColor Cyan
Write-Host "‚Ä¢ Dashboard Supabase: https://supabase.com/dashboard" -ForegroundColor Cyan
Write-Host "‚Ä¢ Documentation: README-CLOUDFLARE.md" -ForegroundColor Cyan
Write-Host ""
Write-Host "üöÄ Votre application QR Code Jeunact est maintenant disponible 24/7 !" -ForegroundColor Green
